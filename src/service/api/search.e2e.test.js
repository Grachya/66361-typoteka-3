"use strict";

const express = require(`express`);
const request = require(`supertest`);
const Sequelize = require(`sequelize`);
const initDB = require(`../lib/init-db`);
const search = require(`./search`);
const SearchService = require(`../data-service/search`);
const {HttpCode} = require(`../../constants`);

const mockCategories = [
  `Деревья`,
  `За жизнь`,
  `Без рамки`,
  `Разное`,
  `IT`,
  `Музыка`,
  `Кино`,
  `Программирование`,
  `Железо`
];

const mockArticles = [
  {
    title: `Ёлки. История деревьев`,
    announce:
      `Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете. Из под его пера вышло 8 платиновых альбомов. Как начать действовать? Для начала просто соберитесь.`,
    fullText:
      `Золотое сечение — соотношение двух величин, гармоническая пропорция. Как начать действовать? Для начала просто соберитесь.`,
    categories: [
      `Без рамки`,
      `Разное`,
      `Музыка`,
      `Деревья`,
      `Кино`,
      `IT`,
      `Программирование`
    ],
    comments: [
      {
        text: `Плюсую, но слишком много буквы!, Мне не нравится ваш стиль. Ощущение, что вы меня поучаете., Совсем немного...,`,
      },
      {
        text: `Согласен с автором!, Хочу такую же футболку :-), Планируете записать видосик на эту тему?`,
      },
      {
        text: `Плюсую, но слишком много буквы!, Мне кажется или я уже читал это где-то?, Согласен с автором!,`,
      },
    ],
    photo: `sea@1x.jpg`,
  },
  {
    title: `Ёлки. История деревьев`,
    announce: ``,
    fullText:
      `Первая большая ёлка была установлена только в 1938 году. Программировать не настолько сложно, как об этом говорят. Первая большая ёлка была установлена только в 1938 году. Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем. Вы можете достичь всего. Стоит только немного постараться и запастись книгами. Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле? Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике. Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Достичь успеха помогут ежедневные повторения. Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами. Как начать действовать? Для начала просто соберитесь. Он написал больше 30 хитов. Золотое сечение — соотношение двух величин, гармоническая пропорция. Это один из лучших рок-музыкантов.`,
    categories: [
      `Без рамки`,
      `Разное`,
      `Музыка`,
      `Деревья`,
      `Кино`,
      `IT`,
      `Программирование`
    ],
    comments: [
      {
        text: `Хочу такую же футболку :-), Давно не пользуюсь стационарными компьютерами. Ноутбуки победили., Плюсую, но слишком много буквы!,`,
      },
      {
        text: `Давно не пользуюсь стационарными компьютерами. Ноутбуки победили., Это где ж такие красоты?,`,
      },
    ],
    photo: `sea@1x.jpg`,
  },
  {
    title: `Рок — это протест`,
    announce:
      `Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике. Простые ежедневные упражнения помогут достичь успеха. Как начать действовать? Для начала просто соберитесь. Как начать действовать? Для начала просто соберитесь.`,
    fullText:
      `Простые ежедневные упражнения помогут достичь успеха. Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле? Золотое сечение — соотношение двух величин, гармоническая пропорция.`,
    categories: [
      `Без рамки`,
      `Разное`,
      `Музыка`,
      `Деревья`,
      `Кино`,
      `IT`,
      `Программирование`
    ],
    comments: [
      {
        text: `Планируете записать видосик на эту тему? Совсем немного...,`,
      },
      {
        text: `Мне кажется или я уже читал это где-то?, Плюсую, но слишком много буквы!, Совсем немного...,`,
      },
    ],
    photo: `skyscraper@1x.jpg`,
  },
  {
    title: `Ёлки. История деревьев`,
    announce:
      `Собрать камни бесконечности легко, если вы прирожденный герой. Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем. Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами.`,
    fullText:
      `Из под его пера вышло 8 платиновых альбомов. Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле? Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете. Вы можете достичь всего. Стоит только немного постараться и запастись книгами. Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами.`,
    categories: [
      `Без рамки`,
      `Разное`,
      `Музыка`,
      `Деревья`,
      `Кино`,
      `IT`,
      `Программирование`
    ],
    comments: [
      {
        text: `Планируете записать видосик на эту тему? Согласен с автором!,`,
      },
      {
        text: `Мне кажется или я уже читал это где-то?, Это где ж такие красоты?, Хочу такую же футболку :-),`,
      },
      {
        text: `Хочу такую же футболку :-), Планируете записать видосик на эту тему?`,
      },
    ],
    photo: `skyscraper@1x.jpg`,
  },
  {
    title: `Лучшие рок-музыканты 20-века`,
    announce: ``,
    fullText:
      `Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами. Помните, небольшое количество ежедневных упражнений лучше, чем один раз, но много. Игры и программирование разные вещи. Не стоит идти в программисты, если вам нравятся только игры.`,
    categories: [
      `Без рамки`,
      `Разное`,
      `Музыка`,
      `Деревья`,
      `Кино`,
      `IT`,
      `Программирование`
    ],
    comments: [
      {
        text: `Мне кажется или я уже читал это где-то?, Совсем немного..., Плюсую, но слишком много буквы!,`,
      },
      {
        text: `Согласен с автором!, Планируете записать видосик на эту тему? Давно не пользуюсь стационарными компьютерами. Ноутбуки победили.,`,
      },
      {
        text: `Мне кажется или я уже читал это где-то?, Согласен с автором!, Хочу такую же футболку :-),`,
      },
      {
        text: `Совсем немного..., Хочу такую же футболку :-), Давно не пользуюсь стационарными компьютерами. Ноутбуки победили.,`,
      },
    ],
    photo: `skyscraper@1x.jpg`,
  },
];

const mockDB = new Sequelize(`sqlite::memory:`, {logging: false});

const app = express();
app.use(express.json());

beforeAll(async () => {
  try {
    await initDB(mockDB, {categories: mockCategories, articles: mockArticles});
  } catch (error) {
    console.log(`error`, error);
  }

  search(app, new SearchService(mockDB));
});

describe(`API returns offer based on search query`, () => {
  let response;

  beforeAll(async () => {
    response = await request(app).get(`/search`).query({
      query: `Лучшие рок-музыканты 20-века`,
    });
  });

  test(`Status code 200`, () => expect(response.statusCode).toBe(HttpCode.OK));
  test(`3 offer found`, () => expect(response.body.length).toBe(1));
  test(`Offer has correct title`, () =>
    expect(response.body[0].title).toBe(`Лучшие рок-музыканты 20-века`));
});

test(`API returns code 404 if nothing is found`, () =>
  request(app)
    .get(`/search`)
    .query({
      query: `Продам свою душу`,
    })
    .expect(HttpCode.NOT_FOUND));

test(`API returns 400 when query string is absent`, () =>
  request(app).get(`/search`).expect(HttpCode.BAD_REQUEST));
